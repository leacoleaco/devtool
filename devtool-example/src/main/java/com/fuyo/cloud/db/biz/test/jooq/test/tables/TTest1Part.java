/*
 * This file is generated by jOOQ.
 */
package com.fuyo.cloud.db.biz.test.jooq.test.tables;


import com.fuyo.cloud.db.biz.test.jooq.test.Keys;
import com.fuyo.cloud.db.biz.test.jooq.test.Test;
import com.fuyo.cloud.db.biz.test.jooq.test.tables.records.TTest1PartRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TTest1Part extends TableImpl<TTest1PartRecord> {

    private static final long serialVersionUID = -1509163427;

    /**
     * The reference instance of <code>test.t_test1_part</code>
     */
    public static final TTest1Part T_TEST1_PART = new TTest1Part();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TTest1PartRecord> getRecordType() {
        return TTest1PartRecord.class;
    }

    /**
     * The column <code>test.t_test1_part.id</code>.
     */
    public final TableField<TTest1PartRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.t_test1_part.test_id</code>.
     */
    public final TableField<TTest1PartRecord, Integer> TEST_ID = createField(DSL.name("test_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>test.t_test1_part.name</code>.
     */
    public final TableField<TTest1PartRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>test.t_test1_part.date_time</code>.
     */
    public final TableField<TTest1PartRecord, LocalDateTime> DATE_TIME = createField(DSL.name("date_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>test.t_test1_part.type</code>.
     */
    public final TableField<TTest1PartRecord, Integer> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>test.t_test1_part</code> table reference
     */
    public TTest1Part() {
        this(DSL.name("t_test1_part"), null);
    }

    /**
     * Create an aliased <code>test.t_test1_part</code> table reference
     */
    public TTest1Part(String alias) {
        this(DSL.name(alias), T_TEST1_PART);
    }

    /**
     * Create an aliased <code>test.t_test1_part</code> table reference
     */
    public TTest1Part(Name alias) {
        this(alias, T_TEST1_PART);
    }

    private TTest1Part(Name alias, Table<TTest1PartRecord> aliased) {
        this(alias, aliased, null);
    }

    private TTest1Part(Name alias, Table<TTest1PartRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> TTest1Part(Table<O> child, ForeignKey<O, TTest1PartRecord> key) {
        super(child, key, T_TEST1_PART);
    }

    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    @Override
    public UniqueKey<TTest1PartRecord> getPrimaryKey() {
        return Keys.KEY_T_TEST1_PART_PRIMARY;
    }

    @Override
    public List<UniqueKey<TTest1PartRecord>> getKeys() {
        return Arrays.<UniqueKey<TTest1PartRecord>>asList(Keys.KEY_T_TEST1_PART_PRIMARY);
    }

    @Override
    public TTest1Part as(String alias) {
        return new TTest1Part(DSL.name(alias), this);
    }

    @Override
    public TTest1Part as(Name alias) {
        return new TTest1Part(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TTest1Part rename(String name) {
        return new TTest1Part(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TTest1Part rename(Name name) {
        return new TTest1Part(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, String, LocalDateTime, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
