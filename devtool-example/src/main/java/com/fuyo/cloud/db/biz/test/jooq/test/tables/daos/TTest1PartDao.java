/*
 * This file is generated by jOOQ.
 */
package com.fuyo.cloud.db.biz.test.jooq.test.tables.daos;


import com.fuyo.cloud.db.biz.test.jooq.test.tables.TTest1Part;
import com.fuyo.cloud.db.biz.test.jooq.test.tables.records.TTest1PartRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TTest1PartDao extends DAOImpl<TTest1PartRecord, com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part, Integer> {

    /**
     * Create a new TTest1PartDao without any configuration
     */
    public TTest1PartDao() {
        super(TTest1Part.T_TEST1_PART, com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part.class);
    }

    /**
     * Create a new TTest1PartDao with an attached configuration
     */
    @Autowired
    public TTest1PartDao(Configuration configuration) {
        super(TTest1Part.T_TEST1_PART, com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part.class, configuration);
    }

    @Override
    public Integer getId(com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TTest1Part.T_TEST1_PART.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchById(Integer... values) {
        return fetch(TTest1Part.T_TEST1_PART.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part fetchOneById(Integer value) {
        return fetchOne(TTest1Part.T_TEST1_PART.ID, value);
    }

    /**
     * Fetch records that have <code>test_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchRangeOfTestId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TTest1Part.T_TEST1_PART.TEST_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>test_id IN (values)</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchByTestId(Integer... values) {
        return fetch(TTest1Part.T_TEST1_PART.TEST_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TTest1Part.T_TEST1_PART.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchByName(String... values) {
        return fetch(TTest1Part.T_TEST1_PART.NAME, values);
    }

    /**
     * Fetch records that have <code>date_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchRangeOfDateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TTest1Part.T_TEST1_PART.DATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date_time IN (values)</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchByDateTime(LocalDateTime... values) {
        return fetch(TTest1Part.T_TEST1_PART.DATE_TIME, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchRangeOfType(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(TTest1Part.T_TEST1_PART.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.fuyo.cloud.db.biz.test.jooq.test.tables.pojos.TTest1Part> fetchByType(Byte... values) {
        return fetch(TTest1Part.T_TEST1_PART.TYPE, values);
    }
}
